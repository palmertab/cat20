<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWoAAAAwCAYAAAA4ujDGAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjEgNjQuMTQwOTQ5LCAyMDEwLzEyLzA3LTEwOjU3OjAxICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjAxODAxMTc0MDcyMDY4MTFBODg1QkIyNzA1OTk4
        MzQ1IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjFGMDJDNkQyRDU1RjExRTA5NjRDREE1Q0RBMzBF
        RUVGIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjFGMDJDNkQxRDU1RjExRTA5NjRDREE1Q0RBMzBF
        RUVGIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgTWFjaW50b3NoIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6QTJDMEM1MUIxMzIwNjgxMTlBODVG
        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
</value>
  </data>
  <metadata name="FolderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>34</value>
  </metadata>
</root>